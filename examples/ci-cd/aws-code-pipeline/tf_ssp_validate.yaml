version: 0.2

env:
  variables:
    TF_VERSION: "1.1.6"
    ENVIRONMENT: "dev"
    SKIPVALIDATIONFAILURE: "Y"
    ENABLE_TFVALIDATE: "Y"
    ENABLE_TFFORMAT: "Y"
    ENABLE_TFCHECKOV: "Y"
    ENABLE_TFSEC: "N"
    EXAMPLE_DIR: "examples/eks-cluster-with-new-vpc"

phases:
  install:
    runtime-versions:
      python: 3.9
      golang: 1.14
    commands:
      - "curl -s -qL -o terraform.zip https://releases.hashicorp.com/terraform/${TF_VERSION}/terraform_${TF_VERSION}_linux_amd64.zip"
      - "unzip -o terraform.zip"
      - mv terraform /bin
      - rm terraform.zip
      - yum update -y
      - yum install -y curl jq awscli
      - pip3 install checkov
      #- go install github.com/aquasecurity/tfsec/cmd/tfsec@latest
      - aws sts get-caller-identity
      #- cd ./examples/ci-cd/aws-code-pipeline/scripts
      #- "/bin/bash tf_ssp_validation.sh ${ENVIRONMENT}"
  pre_build:
    commands:
      - "echo ## VALIDATION : Starting ..."
      - cd $CODEBUILD_SRC_DIR
      - mkdir ${EXAMPLE_DIR}/reports
      - cd ${EXAMPLE_DIR}
      - pwd
      - "terraform init"
      - "/bin/bash ../ci-cd/aws-code-pipeline/scripts/tf_ssp_validation.sh ${SKIPVALIDATIONFAILURE} ${ENABLE_TFVALIDATE} ${ENABLE_TFFORMAT} ${ENABLE_TFCHECKOV} ${ENABLE_TFSEC}"
      - ls
      - cp checkov.xml ./reports/checkov.xml
  build:
    commands:
      #- "echo ## TERRAFORM INIT : Initialize the Terraform Workspace"
     # - "terraform plan -out tfapply"
  post_build:
    commands:
      - echo "Nothing to do in the post_build  for now"
artifacts:
  files:
    - '**/*'
reports:
  checkov-reports:
    files:
      - "${EXAMPLE_DIR}/reports/*.xml"
    fileformat: "JUNITXML"